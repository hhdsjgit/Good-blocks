{
  "_fv": 39,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"event_trigger\" deletable=\"false\" x=\"196\" y=\"39\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"java_code\"><field name=\"CODE\">&amp;#10;&amp;#10;    private static final int TRUNK_HEIGHT = 7;&amp;#10;    private static final int LEAF_LAYER_START = 3;&amp;#10;    private static final int LEAF_RADIUS = 2;&amp;#10;    private static final double GENERATION_CHANCE = 0.3;&amp;#10;&amp;#10;&amp;#10;    public static void execute(LevelAccessor world, double x, double y, double z) {&amp;#10;        if (Math.random() &gt; GENERATION_CHANCE) {&amp;#10;            return;&amp;#10;        }&amp;#10;&amp;#10;        if (hasVerticalSpace(world, x, y, z, TRUNK_HEIGHT)) {&amp;#10;            generateTrunk(world, x, y, z);&amp;#10;            generateLeaves(world, x, y + LEAF_LAYER_START, z);&amp;#10;        }&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;    private static boolean hasVerticalSpace(LevelAccessor world, double x, double baseY, double z, int height) {&amp;#10;        for (int i = 0; i &lt;= height; i++) {&amp;#10;            if (!world.isEmptyBlock(new BlockPos(x, baseY + i, z))) {&amp;#10;                return false;&amp;#10;            }&amp;#10;        }&amp;#10;        return true;&amp;#10;    }&amp;#10;&amp;#10;    private static void generateTrunk(LevelAccessor world, double x, double y, double z) {&amp;#10;        for (int i = 0; i &lt;= TRUNK_HEIGHT; i++) {&amp;#10;            setBlockIfEmpty(world, x, y + i, z, GoodblockModBlocks.PALE_WOOD_LOG.get());&amp;#10;        }&amp;#10;    }&amp;#10;&amp;#10;    private static void generateLeaves(LevelAccessor world, double centerX, double centerY, double centerZ) {&amp;#10;        generateLeafLayer(world, centerX, centerY, centerZ, 1);&amp;#10;        generateLeafLayer(world, centerX, centerY + 1, centerZ, 2);&amp;#10;        setBlockIfEmpty(world, centerX, centerY + 5, centerZ, GoodblockModBlocks.PALE_WOOD_LEAVES.get());&amp;#10;        generateVerticalLeafRing(world, centerX, centerY, centerZ, 1, 4, 6);&amp;#10;    }&amp;#10;&amp;#10;    private static void generateLeafLayer(LevelAccessor world, double centerX, double centerY, double centerZ, int radius) {&amp;#10;        for (int dx = -radius; dx &lt;= radius; dx++) {&amp;#10;            for (int dz = -radius; dz &lt;= radius; dz++) {&amp;#10;                if (dx * dx + dz * dz &lt;= radius * radius) {&amp;#10;                    setBlockIfEmpty(world, centerX + dx, centerY, centerZ + dz, &amp;#10;                                  GoodblockModBlocks.PALE_WOOD_LEAVES.get());&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;   &amp;#10;&amp;#10;    private static void generateVerticalLeafRing(LevelAccessor world, double centerX, double baseY, double centerZ, &amp;#10;                                              int radius, int startHeight, int endHeight) {&amp;#10;        for (int yOffset = startHeight; yOffset &lt;= endHeight; yOffset++) {&amp;#10;            for (int i = 0; i &lt; 4; i++) {&amp;#10;                double angle = i * Math.PI / 2;&amp;#10;                int dx = (int) Math.round(Math.cos(angle) * radius);&amp;#10;                int dz = (int) Math.round(Math.sin(angle) * radius);&amp;#10;                setBlockIfEmpty(world, centerX + dx, baseY + yOffset, centerZ + dz,&amp;#10;                               GoodblockModBlocks.PALE_WOOD_LEAVES.get());&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;&amp;#10;    private static void setBlockIfEmpty(LevelAccessor world, double x, double y, double z, Block block) {&amp;#10;        BlockPos pos = new BlockPos(x, y, z);&amp;#10;        if (world.isEmptyBlock(pos)) {&amp;#10;            world.setBlock(pos, block.defaultBlockState(), 3);&amp;#10;        }&amp;#10;    }&amp;#10;}</field></block></next></block></xml>"
  }
}